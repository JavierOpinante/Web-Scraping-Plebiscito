# Para evaluar avance
resultados %>% slice(contar_fila) %>% print()
print(paste(lista_comunas$nombre[i], lista_circunscripcion$nombre[j],
lista_local$nombre[q],
nrow(lista_mesas), k),
sep = ";")
# Contador de fila para almacenar de forma correcta
contar_fila <- contar_fila + 1
}
Sys.sleep(1)
}
Sys.sleep(1)
}
Sys.sleep(3)
}
resultados
resultados %>%
rename("Comuna" = 1,
"Circunscripción" = 2,
"Local" = 3,
"Mesa" = 4,
"Apruebo" = 5,
"Rechazo" = 6,
"Nulo" = 7,
"Blanco" = 8)
reg_com
reg_com <- reg_com %>%
select(-inicial)
reg_com
resultados %>%
rename("Comuna" = 1,
"Circunscripción" = 2,
"Local" = 3,
"Mesa" = 4,
"Apruebo" = 5,
"Rechazo" = 6,
"Nulo" = 7,
"Blanco" = 8) %>%
left_join(reg_com, by = c("Comuna" = "nombre"))
# Ajustar data frame
resultados %>%
rename("Comuna" = 1,
"Circunscripción" = 2,
"Local" = 3,
"Mesa" = 4,
"Apruebo" = 5,
"Rechazo" = 6,
"Nulo" = 7,
"Blanco" = 8) %>%
left_join(reg_com, by = c("Comuna" = "nombre")) %>%
select(Region = reg, everything())
resultados %>%
rename("Comuna" = 1,
"Circunscripción" = 2,
"Local" = 3,
"Mesa" = 4,
"Apruebo" = 5,
"Rechazo" = 6,
#"Nulo" = 7,
#"Blanco" = 8
) %>%
left_join(reg_com, by = c("Comuna" = "nombre")) %>%
select(Region = reg, everything())
read_csv("DatosPlebiscitoMesa.csv")
read_csv("DatosPlebiscitoMesa.csv") %>%
left_join(reg_com, by = c("Comuna" = "nombre"))
read_csv("DatosPlebiscitoMesa.csv") %>%
left_join(reg_com, by = c("Comuna" = "comuna"))
read_csv("DatosPlebiscitoMesa.csv")
read_csv("DatosPlebiscitoMesa.csv") %>%
left_join(reg_com, by = c("comuna" = "nombre"))
read_csv("DatosPlebiscitoMesa.csv") %>%
left_join(reg_com, by = c("comuna" = "nombre")) %>%
select(Region = reg, everything())
read_csv("DatosPlebiscitoMesa.csv") %>%
left_join(reg_com, by = c("comuna" = "nombre")) %>%
select(Region = reg, everything()) %>%
rename("Comuna" = 2,
"Circunscripción" = 3,
"Local" = 4,
"Mesa" = 5,
"Apruebo" = 6,
"Rechazo" = 7,
#"Nulo" = 7,
#"Blanco" = 8
)
read_csv("DatosPlebiscitoMesa.csv") %>%
left_join(reg_com, by = c("comuna" = "nombre")) %>%
select(Region = reg, everything()) %>%
rename("Comuna" = 2,
"Circunscripción" = 3,
"Local" = 4,
"Mesa" = 5,
"Apruebo" = 6,
"Rechazo" = 7,
#"Nulo" = 7,
#"Blanco" = 8
) %>%
write_excel_csv("DatosPlebiscitoMesa.csv")
reg_com
# Extraer lista de comunas para cada región
reg_com <- tibble()
for (r in seq_along(lista_regiones$inicial)){
# inicial de la region
ini_reg <- lista_regiones$inicial[r]
Sys.sleep(0.5)
# insertar inicial en menú desplegable de web
webElemRegion <- rd$findElement(using = "css",
value = "#selRegion")
webElemRegion$sendKeysToElement(list(ini_reg))
Sys.sleep(0.5)
# Generar lista de comunas
webElemComuna <- rd$findElement(using = "css",
value = "#selComunas")
lista_comunas <- webElemComuna$getElementAttribute("outerHTML") %>%
limpiar_lista()
Sys.sleep(0.5)
com_r <- lista_comunas %>%
mutate(reg = lista_regiones$nombre[r])
Sys.sleep(0.5)
reg_com <- bind_rows(reg_com, com_r)
}
reg_com
reg_com %>%
arrange(inicial)
reg_com <- reg_com %>%
arrange(inicial)
reg_com
reg_com
datos_comuna <- tibble() # data frame que almacenará resultados
for (i in seq_along(reg_com$inicial)){
# inicial de la comuna
c <- reg_com$inicial[i]
# insertar inicial en menú desplegable de web
webElem$sendKeysToElement(list(c))
# Nombre de la comuna
webElemComuna <- remDr$findElement(using = "css", value = "#divCabecera > h5 > span:nth-child(1)")
comuna <- webElemComuna$getElementText()[[1]] %>%
str_remove("Votación por Comuna ")
Sys.sleep(0.5)
# Votos apruebo
webElemApruebo <- remDr$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3) > small > span")
apruebo <- webElemApruebo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos rechazo
webElemRechazo <- remDr$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(5) > td:nth-child(3) > small > span")
rechazo <- webElemRechazo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos nulo
webElemNulo <- remDr$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(2) > th:nth-child(2) > strong")
nulo <- webElemNulo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos blanco
webElemBlanco <- remDr$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(3) > th:nth-child(2) > strong")
blanco <- webElemBlanco$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
# Ingresar valores en data frame
datos_comuna[i,1] <- comuna
datos_comuna[i,2] <- apruebo
datos_comuna[i,3] <- rechazo
datos_comuna[i,4] <- nulo
datos_comuna[i,5] <- blanco
# Reportar en cada iteración resultados
datos_comuna %>%
slice(i) %>% print()
cbind(nrow(dplyr::distinct(dplyr::select(datos_comuna, `...1`))), nrow(datos_comuna)) %>% print()
Sys.sleep(0.5)
}
datos_comuna <- tibble() # data frame que almacenará resultados
for (i in seq_along(reg_com$inicial)){
# inicial de la comuna
c <- reg_com$inicial[i]
# insertar inicial en menú desplegable de web
webElemComuna <- rd$findElement(using = "css",
value = "#selComunas")
webElemComuna$sendKeysToElement(list(c))
# Nombre de la comuna
webElemComuna <- rd$findElement(using = "css",
value = "#selComunas")
webElemComuna <- remDr$findElement(using = "css", value = "#divCabecera > h5 > span:nth-child(1)")
comuna <- webElemComuna$getElementText()[[1]] %>%
str_remove("Votación por Comuna ")
Sys.sleep(0.5)
# Votos apruebo
webElemApruebo <- remDr$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3) > small > span")
apruebo <- webElemApruebo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos rechazo
webElemRechazo <- remDr$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(5) > td:nth-child(3) > small > span")
rechazo <- webElemRechazo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos nulo
webElemNulo <- remDr$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(2) > th:nth-child(2) > strong")
nulo <- webElemNulo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos blanco
webElemBlanco <- remDr$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(3) > th:nth-child(2) > strong")
blanco <- webElemBlanco$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
# Ingresar valores en data frame
datos_comuna[i,1] <- comuna
datos_comuna[i,2] <- apruebo
datos_comuna[i,3] <- rechazo
datos_comuna[i,4] <- nulo
datos_comuna[i,5] <- blanco
# Reportar en cada iteración resultados
datos_comuna %>%
slice(i) %>% print()
cbind(nrow(dplyr::distinct(dplyr::select(datos_comuna, `...1`))), nrow(datos_comuna)) %>% print()
Sys.sleep(0.5)
}
i <- 1
# inicial de la comuna
c <- reg_com$inicial[i]
c
# insertar inicial en menú desplegable de web
webElemComuna <- rd$findElement(using = "css",
value = "#selComunas")
webElemComuna$sendKeysToElement(list(c))
webElemComuna$getElementText()[[1]] %>%
str_remove("Votación por Comuna ")
# Votos apruebo
webElemApruebo <- remDr$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3) > small > span")
# Votos apruebo
webElemApruebo <- rd$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3) > small > span")
webElemApruebo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
apruebo <- webElemApruebo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
# Votos rechazo
webElemRechazo <- rd$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(5) > td:nth-child(3) > small > span")
rechazo <- webElemRechazo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
rechazo
# Votos nulo
webElemNulo <- rd$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(2) > th:nth-child(2) > strong")
nulo <- webElemNulo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos blanco
webElemBlanco <- rd$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(3) > th:nth-child(2) > strong")
blanco <- webElemBlanco$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
nulo
blanco
reg_com$reg[i]
reg_com$nombre[i]
reg_com
reg_com %>%
arrange(nombre)
reg_com <- reg_com %>%
arrange(nombre)
reg_com$nombre[i]
reg_com$reg[i]
reg_com
datos_comuna <- tibble() # data frame que almacenará resultados
for (i in seq_along(reg_com$inicial)){
# inicial de la comuna
c <- reg_com$inicial[i]
# insertar inicial en menú desplegable de web
webElemComuna <- rd$findElement(using = "css",
value = "#selComunas")
webElemComuna$sendKeysToElement(list(c))
# Votos apruebo
webElemApruebo <- rd$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(3) > small > span")
apruebo <- webElemApruebo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos rechazo
webElemRechazo <- rd$findElement(using = "css", value = "#basic-table > table > tbody:nth-child(2) > tr:nth-child(5) > td:nth-child(3) > small > span")
rechazo <- webElemRechazo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos nulo
webElemNulo <- rd$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(2) > th:nth-child(2) > strong")
nulo <- webElemNulo$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
Sys.sleep(0.5)
# Votos blanco
webElemBlanco <- rd$findElement(using = "css", value = "#basic-table > table > tfoot > tr:nth-child(3) > th:nth-child(2) > strong")
blanco <- webElemBlanco$getElementText()[[1]] %>%
str_remove("\\.") %>%
as.numeric()
# Ingresar valores en data frame
datos_comuna[i,1] <- reg_com$reg[i]
datos_comuna[i,2] <- reg_com$nombre[i]
datos_comuna[i,3] <- apruebo
datos_comuna[i,4] <- rechazo
datos_comuna[i,5] <- nulo
datos_comuna[i,6] <- blanco
# Reportar en cada iteración resultados
datos_comuna %>%
slice(i) %>% print()
cbind(nrow(dplyr::distinct(dplyr::select(datos_comuna, `...1`))), nrow(datos_comuna)) %>% print()
Sys.sleep(0.5)
}
datos_comuna
datos_comuna %>%
rename("Region" = 1,
"Comuna" = 2,
"Apruebo" = 3,
"Rechazo" = 4,
"Nulo" = 5,
"Blanco" = 6
)
datos_comuna %>%
rename("Region" = 1,
"Comuna" = 2,
"Apruebo" = 3,
"Rechazo" = 4,
"Nulo" = 5,
"Blanco" = 6
) %>%
mutate(Region = str_remove(Region, "DE "))
datos_comuna %>%
rename("Region" = 1,
"Comuna" = 2,
"Apruebo" = 3,
"Rechazo" = 4,
"Nulo" = 5,
"Blanco" = 6
) %>%
mutate(Region = str_remove(Region, "DE "),
Region = str_remove(Region, "DEL "))
datos_comuna %>%
rename("Region" = 1,
"Comuna" = 2,
"Apruebo" = 3,
"Rechazo" = 4,
"Nulo" = 5,
"Blanco" = 6
) %>%
mutate(Region = str_remove(Region, "DE "),
Region = str_remove(Region, "DEL "),
Validos = Apruebo+Rechazo,
Total = Validos+Nulo+Blanco,
Validos_per = Validos/Total,
Apruebo_per = (Apruebo/Validos)*100,
Rechazo_per = (Rechazo/Validos)*100,
Nulo_per = (Nulo/Total)*100,
Blanco_per = (Blanco/Total)*100)
datos_comuna %>%
rename("Region" = 1,
"Comuna" = 2,
"Apruebo" = 3,
"Rechazo" = 4,
"Nulo" = 5,
"Blanco" = 6
) %>%
mutate(Region = str_remove(Region, "DE "),
Region = str_remove(Region, "DEL "),
Validos = Apruebo+Rechazo,
Total = Validos+Nulo+Blanco,
Validos_per = Validos/Total,
Apruebo_per = (Apruebo/Validos)*100,
Rechazo_per = (Rechazo/Validos)*100,
Nulo_per = (Nulo/Total)*100,
Blanco_per = (Blanco/Total)*100) %>%
select(Region, Comuna, Total, Validos, Apruebo, Rechazo, Nulo, Blanco,
Validos_per, Apruebo_per, Rechazo_per, Nulo_per, Blanco_per)
datos_comuna %>%
rename("Region" = 1,
"Comuna" = 2,
"Apruebo" = 3,
"Rechazo" = 4,
"Nulo" = 5,
"Blanco" = 6
) %>%
mutate(Region = str_remove(Region, "DE "),
Region = str_remove(Region, "DEL "),
Validos = Apruebo+Rechazo,
Total = Validos+Nulo+Blanco,
Validos_per = Validos/Total,
Apruebo_per = (Apruebo/Validos)*100,
Rechazo_per = (Rechazo/Validos)*100,
Nulo_per = (Nulo/Total)*100,
Blanco_per = (Blanco/Total)*100) %>%
select(Region, Comuna, Total, Validos, Apruebo, Rechazo, Nulo, Blanco,
Validos_per, Apruebo_per, Rechazo_per, Nulo_per, Blanco_per) %>%
dplyr::arrange(Region, Comuna)
rd$closeServer();rd$close();remDr$server$stop()
read_csv("DatosPlebiscitoMesa.csv")
read_csv("DatosPlebiscitoMesa.csv") %>% View
datos_mesa <- read_csv("DatosPlebiscitoMesa.csv")
datos_comuna <- read_csv("DatosPlebiscito.csv")
View(datos_comuna)
datos_mesa
library(tidyverse)
library(ggmap)
datos_mesa %>%
distinct(Mesa)
locales <- datos_mesa %>%
distinct(Local)
locales
locales <- datos_mesa %>%
distinct(Region, Comuna, Local)
locales <- datos_mesa %>%
distinct(Local)
locales <- datos_mesa %>%
distinct(Region, Comuna, Local)
locales
locales <- datos_mesa %>%
mutate(Region = str_remove(Region, "DE "),
Region = str_remove(Region, "DEL ")) %>%
distinct(Region, Comuna, Local)
locales
locales <- datos_mesa %>%
mutate(Region = str_remove(Region, "DE "),
Region = str_remove(Region, "DEL ")) %>%
distinct(Comuna, Local)
locales <- datos_mesa %>%
distinct(Comuna, Local)
locales
locales <- datos_mesa %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"))
locales
locales_direccion <- locales %>%
mutate_geocode(paragoogle)
?register_google
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO")
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"))
locales
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, "\\"))
paragoogle = str_remove_all(paragoogle, "\\\"))
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, "\\\\"))
locales
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, "\\"))
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, "\\"))
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, '\\"'))
locales
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA DE SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, '\\"'))
library(tidyverse)
library(ggmap)
library(sf)
library(mapview)
library(leaflet)
datos_mesa <- read_csv("DatosPlebiscitoMesa.csv")
locales <- datos_mesa %>%
filter(Region == "METROPOLITANA SANTIAGO") %>%
distinct(Comuna, Local) %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, '\\"'))
locales_direccion <- mutate_geocode(locales, location = paragoogle, output = "latlon")
datos_RM_mesa_coord <- datos_mesa %>%
mutate(paragoogle = paste(Comuna, Local, sep = "+"),
paragoogle = str_remove_all(paragoogle, '\\"')) %>%
filter(Region == "METROPOLITANA SANTIAGO") %>%
left_join(select(locales_direccion, paragoogle, lon, lat), by = "paragoogle") %>%
filter(!is.na(lon))
datos_RM_mesa_coord %>%
write_excel_csv("DatosPlebiscitoMesaRMCoord.csv")
mapa_sf <- st_as_sf(datos_RM_mesa_coord, coords = c("lon", "lat"), crs = 4326)
mapview(mapa_sf)
dev.off()
install.packages("Rcade")
devtools::install_github('RLesur/Rcade')
library(Rcade)
library(Rcade)
Rcade::games
?games
games$Pacman
